<script>
  data = {
      journal_headers: [
          <% @journal_headers.each{ | jh | %>
            {
              detail_row:false,
              journal_header_id:"<%= jh.id %>",
              ym:"<%= jh.ym %>",
              day:"<%= jh.day %>",
              remarks:"<%= jh.remarks %>",
              amount:"<%= jh.amount %>",
            },
            
            <% jh.journal_details.each { | jd | %>
              {
                detail_row:true,
                journal_detail_id:"<%= jd.id %>",
                remarks:"<%= jd.note %>",
                account_code:"<%= jd.account.code %>",
                account_name:"<%= jd.account.name %>",
                account_dc_type:<%= jd.account.dc_type %>,
                branch_name:"<%= jd.branch_name %>",
                dc_type:<%= jd.dc_type %>,
                debit_amount:"<%= jd.amount if jd.dc_type == HyaccConstants::DC_TYPE_DEBIT %>",
                credit_amount:"<%= jd.amount if jd.dc_type == HyaccConstants::DC_TYPE_CREDIT %>",
                social_expense_number_of_people:"<%= jd.social_expense_number_of_people %>",
              },
            <% } %>
          <% } %>
      ]
  }
      
  YAHOO.util.Event.addListener(window, "load", function() {
      social_expense_div = new function() {
      
        function isTarget( oRecord ) {
          if ( ! oRecord.getData("detail_row") ) {
            return false;
          }
          
          if ( oRecord.getData("account_code") != <%= HyaccConstants::ACCOUNT_CODE_SOCIAL_EXPENSE %> ) {
            return false;
          }
          
          return true;
        }
        
        function calcDeductionAmount( oRecord ) {
          var numberOfPeople = oRecord.getData("social_expense_number_of_people");
          var deductionAmount = numberOfPeople * 5000;

          if ( oRecord.getData("dc_type") != oRecord.getData("account_dc_type") ) {
            deductionAmount = deductionAmount * -1;
          }

          return deductionAmount;
        }
        
        function calcSocialExpenseAmount( oRecord ) {
          var amount = 0;
          if ( oRecord.getData("dc_type") == oRecord.getData("account_dc_type") ) {
            if ( oRecord.getData("dc_type") == <%= HyaccConstants::DC_TYPE_DEBIT %> ) {
              amount = oRecord.getData("debit_amount");
            }
            else {
              amount = oRecord.getData("credit_amount");
            }
          }
          else {
            if ( oRecord.getData("dc_type") == <%= HyaccConstants::DC_TYPE_DEBIT %> ) {
              amount = oRecord.getData("debit_amount") * -1;
            }
            else {
              amount = oRecord.getData("credit_amount") * -1;
            }
          }
          
          var socialExpenseAmount = 0;
          if ( amount > 0 ) {
            socialExpenseAmount = amount - calcDeductionAmount( oRecord );
            if ( socialExpenseAmount < 0 ) {
              socialExpenseAmount = 0;
            }
          }
          else {
            socialExpenseAmount = amount - calcDeductionAmount( oRecord );
            if ( socialExpenseAmount > 0 ) {
              socialExpenseAmount = 0;
            }
          }
                    
          return socialExpenseAmount;
        }
        
        this.formatSocialExpenseNumber = function(elCell, oRecord, oColumn, oData) {
          YAHOO.widget.DataTable.formatText(elCell, oRecord, oColumn, oData);
          if ( ! isTarget( oRecord ) ) {
            elCell.parentNode.style.background = 'lightgrey';
          }
        }
      
        this.formatDeductionAmount = function(elCell, oRecord, oColumn, oData) {
          if ( isTarget( oRecord ) ) {
            YAHOO.widget.DataTable.formatText(elCell, oRecord, oColumn, toAmount( calcDeductionAmount( oRecord ) ) );
          }
        }
        
        this.formatSocialExpenseAmount = function(elCell, oRecord, oColumn, oData) {
          if ( isTarget( oRecord ) ) {
            YAHOO.widget.DataTable.formatText(elCell, oRecord, oColumn, toAmount( calcSocialExpenseAmount( oRecord ) ) );
          }
        }

        this.formatAmount = function(elCell, oRecord, oColumn, oData) {
          if ( oData != null ) {
            YAHOO.widget.DataTable.formatText(elCell, oRecord, oColumn, toAmount( oData ) );
          }
        }
        
        this.validateNumber = function(value) {
          if (isEmpty(value)) {
            return "";
          }
          
          if (isNaN(value)) {
            alert("数値を入力してください。")
          }
          else {
            return toInt(value);
          }
        }
        
        var myColumnDefs = [
            {key:"ym", label:"年月", resizeable:true},
            {key:"day", label:"日", resizeable:true},
            {key:"remarks", label:"摘要", resizeable:true},
            {key:"amount", label:"伝票金額", resizeable:true, formatter:this.formatAmount, className:'amount'},
            {key:"account_name", label:"勘定科目", resizeable:true},
            <% if branch_mode %>
            {key:"branch_name", label:"計上部門", resizeable:true},
            <% end %>
            {key:"debit_amount", label:"借方金額", resizeable:true, formatter:this.formatAmount, className:'amount'},
            {key:"credit_amount", label:"貸方金額", resizeable:true, formatter:this.formatAmount, className:'amount'},
            {key:"social_expense_number_of_people", label:"参加人数", resizeable:true, formatter:this.formatSocialExpenseNumber,
              editor:"textbox", editorOptions:{validator:this.validateNumber, disableBtns:true}, className:'social_expense_number_of_people'},
            {key:"deduction_amount", label:"控除額", resizeable:true, formatter:this.formatDeductionAmount, className:'amount'},
            {key:"social_expense_amount", label:"差引交際費", resizeable:true, formatter:this.formatSocialExpenseAmount, className:'amount'},
        ];

        this.myDataSource = new YAHOO.util.DataSource(data.journal_headers);
        this.myDataSource.responseType = YAHOO.util.DataSource.TYPE_JSARRAY;
        this.myDataSource.responseSchema = {
            fields: ["detail_row", "journl_header_id", "journal_detail_id", "ym", "day", "remarks",
              "amount", "account_code", "account_name", "account_dc_type", "branch_name", "dc_type",
              "debit_amount", "credit_amount", "social_expense_number_of_people"]
        };

        this.myDataTable = new YAHOO.widget.DataTable("social_expense_div", myColumnDefs, this.myDataSource);
        
        <% unless @closing_status == HyaccConstants::CLOSING_STATUS_CLOSED %>
        this.myDataTable.showEditor = function( oArgs ) {
          var record = this.getRecord( oArgs.target );
          
          <%# 伝票明細行でなければエディタを起動しない %>
          if ( ! record.getData("detail_row") ) return;
          
          <%# 科目が接待交際費でなければエディタを起動しない %>
          if ( record.getData("account_code") != <%= HyaccConstants::ACCOUNT_CODE_SOCIAL_EXPENSE %> ) return;
          
          // TODO YUIをやめてjQueryにするまで無効化
          //this.onEventShowCellEditor( oArgs );
          return;
        }
        this.myDataTable.subscribe("cellClickEvent", this.myDataTable.showEditor);
        <% end %>
        
        this.myDataTable.saveNumberOfPeople = function( oArgs ) {
          if ( oArgs.newData == oArgs.oldData ) {
            return;
          }
          
          var record = oArgs.editor.getRecord();
          YAHOO.util.Connect.asyncRequest(
                'POST',
                '<%= url_for :action => 'update' %>' + '/' + record.getData('journal_detail_id'),
                {
                    success: function (o) {
                        if (o.responseText != 'OK') {
                            alert(o.responseText + "\n" + "接待交際費一覧を再読み込みしてください。");
                        }
                    },
                    failure: function (o) {
                        alert(o.statusText);
                    },
                    scope:this
                },
                "social_expense_number_of_people=" + record.getData('social_expense_number_of_people')
            );
          
        }
        this.myDataTable.subscribe("editorSaveEvent", this.myDataTable.saveNumberOfPeople);
        this.myDataTable.subscribe("editorSaveEvent", this.myDataTable.render);
        
        return {
          oDS: this.myDataSource,
          oDT: this.myDataTable
        };
      };
  });
</script>

<div id="social_expense_div" style="margin:10px;"></div>

